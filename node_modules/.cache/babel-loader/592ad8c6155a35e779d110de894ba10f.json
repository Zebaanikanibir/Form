{"ast":null,"code":"var _jsxFileName = \"E:\\\\form-client\\\\src\\\\Components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport firebase from \"firebase/app\";\nimport { UserContext } from '../../App';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const history = useHistory();\n  const location = useLocation();\n  let {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const [user, setUser] = useState({\n    isSignedIn: false,\n    name: '',\n    email: '',\n    photo: '',\n    password: ''\n  });\n\n  const onSubmit = data => {\n    if (data.email && data.password) {\n      firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(userCredential => {\n        // Signed in\n        const {\n          displayName,\n          email,\n          photoURL,\n          password\n        } = userCredential.user;\n        const signedInUser = {\n          isSignedIn: true,\n          name: displayName,\n          email: email,\n          photo: photoURL,\n          password: password\n        };\n        setUser(signedInUser);\n        setLoggedInUser(signedInUser);\n        console.log(displayName, email, password);\n        storeAuthToken();\n        history.replace(from);\n      }).catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n\n        if (errorMessage) {\n          alert(errorMessage);\n        }\n      });\n    }\n\n    const storeAuthToken = () => {\n      firebase.auth().currentUser.getIdToken(\n      /* forceRefresh */\n      true).then(function (idToken) {\n        console.log('token', idToken);\n        sessionStorage.setItem('token', idToken);\n        setTimeout(function () {\n          sessionStorage.clear();\n        }, 300000);\n        history.replace(from);\n      }).catch(function (error) {// Handle error\n      });\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"logedIn\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: \"label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 70\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        id: \"email\",\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        ...register('email', {\n          required: \"this is a required\",\n          pattern: {\n            value: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n            message: \"Invalid email address\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 24\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 60\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        id: \"password\",\n        type: \"password\",\n        placeholder: \"password\",\n        ...register('password', {\n          required: \"this is a required\",\n          maxLength: {\n            value: 10,\n            message: \"incorrect\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 24\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input primary\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"register here  \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"uNW7nBupcx4IDWo/+UqRv18t9z0=\", false, function () {\n  return [useHistory, useLocation, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/form-client/src/Components/Login/Login.js"],"names":["React","useContext","useState","useForm","firebase","UserContext","useHistory","useLocation","Link","Login","loggedInUser","setLoggedInUser","history","location","from","state","pathname","register","handleSubmit","formState","errors","mode","user","setUser","isSignedIn","name","email","photo","password","onSubmit","data","auth","signInWithEmailAndPassword","then","userCredential","displayName","photoURL","signedInUser","console","log","storeAuthToken","replace","catch","error","errorCode","code","errorMessage","message","alert","currentUser","getIdToken","idToken","sessionStorage","setItem","setTimeout","clear","required","pattern","value","maxLength"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport firebase from \"firebase/app\"\r\nimport { UserContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport {\r\n   \r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n    const history = useHistory()\r\n  const location = useLocation()\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n    const { register, handleSubmit, formState: {\r\n        errors\r\n\r\n    } } = useForm({\r\n        mode: \"onChange\"\r\n    });\r\n    const [user, setUser] = useState({\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: '',\r\n        photo: '',\r\n        password:''\r\n\r\n    })\r\nconst onSubmit =(data) =>{\r\n    \r\n    \r\n    if(data.email&& data.password){\r\n        firebase.auth().signInWithEmailAndPassword(data.email, data.password)\r\n    .then((userCredential) => {\r\n      // Signed in\r\n     \r\n      const { displayName, email, photoURL, password } = userCredential.user;\r\n      const signedInUser = {\r\n          isSignedIn: true,\r\n          name: displayName,\r\n          email: email,\r\n          photo: photoURL,\r\n          password:password\r\n      }\r\n      setUser(signedInUser)\r\n      setLoggedInUser(signedInUser);\r\n      console.log(displayName, email, password);\r\n      storeAuthToken()\r\n      history.replace(from);\r\n    })\r\n    .catch((error) => {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      if(errorMessage){\r\n     alert(errorMessage)\r\n      }\r\n    });\r\n    }\r\n    const storeAuthToken = () =>{\r\n        firebase.auth().currentUser.getIdToken(/* forceRefresh */ true).then(function(idToken) {\r\n            console.log('token', idToken)\r\n           sessionStorage.setItem('token', idToken)\r\n    setTimeout(function() {\r\n    sessionStorage.clear()\r\n    },300000)\r\n\r\n           history.replace(from);\r\n          }).catch(function(error) {\r\n            // Handle error\r\n          });\r\n    }\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App mt-5\">\r\n            <h3>Log In</h3>\r\n              <form id=\"logedIn\" onSubmit={handleSubmit(onSubmit)}>\r\n              <label htmlFor=\"email\" className=\"label\">Email</label> <br />\r\n                <input className=\"input\" id=\"email\" type=\"email\" placeholder=\"Enter Email\"{...register('email', {\r\n                    required: \"this is a required\", pattern: {\r\n                        value: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                        message: \"Invalid email address\"\r\n                    }\r\n                })} /> <br />\r\n                {errors.email && <p>{errors.email.message}</p>}\r\n                <label htmlFor=\"password\">Password</label> <br />\r\n              <input className=\"input\" id=\"password\" type=\"password\" placeholder=\"password\" {...register('password', {\r\n                    required: \"this is a required\", maxLength: {\r\n                        value: 10,\r\n                        message: \"incorrect\"\r\n                    }\r\n                })} /> <br />\r\n                {errors.password && <p>{errors.password.message}</p>}\r\n                <input className=\"input primary\" type=\"submit\" />\r\n              </form>\r\n              <p>register here  <Link to=\"/register\">Register</Link></p>\r\n              \r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}